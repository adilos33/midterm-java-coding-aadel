Please answer the below core-java Questions:

What is programing language?
A.

 its  a formal system designed to express computations that can be performed by a computer. It provides a set of rules and syntax that allows programmers to write instructions for a computer to follow. These instructions, known as code,



What jdk contains or composed of and define each components?
A.
software development kit used by Java developers. It contains tools and libraries necessary for developing, compiling, debugging, and running Java applications and applets.





What is IDE?
A.
 is a software application that helps programmers write code efficiently. IDEs combine the tools needed to write and test software, such as text editors, code libraries, compilers, and test platforms. IDEs increase developer productivity by combining these tools into a single application


What are the IDEs available in the market to support java?
A.
eclipse
InteliiJ IDEA.
JDK
MetBeans
JCreator


Explain the entire java life cycle.

    // Life Cycle is a systematic approach to develop software. It creates a structure for the developer to design, create and deliver high-quality software according to the requirements of customer or end-user. It also provides a methodology for improving the quality of the desired product

what is class?
    //is a blueprint for creating objects. It defines the properties and behaviors of an object. A class can contain fields, methods, and constructors.

What is object?

   //is a data structure that encapsulates data and behavior. It is a blueprint for creating instances of a class. An object has state and behavior. State is represented by the object's fields, and behavior is represented by the object's methods.

What is the entry point of an application?
   //  entry point is the place in a program where execution begins. It's the first line of code that's executed

Why main is static?
     //because it needs to be able to be called without creating an instance of the class

Which class is the superclass of all classes?

     // The Object class

What is difference between path and classpath variables?
       //  The classpath variable is used to specify the directories that the JVM should search for class files.

       // The path variable is used to specify the directories that the Java Virtual Machine

What is the difference between an Interface and Abstract class?
   //interface is an abstract type that specifies the behavior of a class.
   // Abstract classes are typically used to create a base class for other classes to inherit from.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
    //We cannot create objects of an abstract class. To implement features of an abstract class, we inherit subclasses from it and create objects of the subclass. A subclass must override all abstract methods of an abstract class. However, if the subclass is declared abstract, it's not mandatory to override abstract methods.

what is Access Specifier?

       //An access specifier  is a keyword that is used to control the accessibility of a class,

What is OOP ? Define each feature of java OOP.

       // OOP = Object-oriented programming is a core of Java Programming, which is used for designing a program using classes and objects. OOPs, can also be characterized as data controlling for accessing the code.
      //     abstraction, encapsulation, inheritance and polymorphism.


What is Java Package and which package is imported by default?

      // A Java package is a group of related classes. It is used to organize code and to prevent name conflicts. The default package is the package that is imported when you create a new Java project. It contains all of the classes that are not part of any other package.

What is API? Name list of API that you have used so far.

     //An API in Java is a set of classes and interfaces that provide a way for developers to interact with a particular functionality

Does java support multiple inheritance, explain why or why not?

     //Java does not support multiple inheritance because it can lead to ambiguity. For example, if a class inherits from two classes that both have a method with the same name, it is not clear which method should be called. To avoid this ambiguity, Java only allows classes to inherit from one class at a time.

What is method overloading and when it happens?

       //is a programming technique that allows developers to use the same method name multiple times in the same class, but with different parameters.

Explain exceptions in java and how to handle it.

     //Exceptions are a way of handling unexpected events in Java. They are objects that are thrown when an error occurs. To handle an exception, you can use a try-catch block

What is static keyword in java? How it has been used in variables and methods ?
        //The static keyword in Java is used to declare variables and methods that belong to the class itself,
        // a static  methods are declared with the static keyword, and they can be accessed using the class name, followed by a dot, followed by the method name
        // a static  variables are declared with the static keyword, and they can be accessed using the class name, followed by a dot, followed by the variable name

What is final and how it has been used variables and methods?

    // The final keyword in Java is used to declare a variable or method as final. A final variable cannot be changed after it is initialized, and a final method cannot be overridden by subclasses.

What is final, finally and finalize?

         //final is a  keyword  used as an access modifier to restrict the modification of a variable, method, or class. It's usually used on static variables that will hold the same value throughout the program
         //finally is a block used to ensure that a section of code is always executed, even if an exception is thrown. It's associated with the try/catch block that is used to handle exceptions.
         // finalize  This method is used to perform cleanup processing on an object before it is garbage collected. It's called by the JVM before an object is about to be garbage collected.

What is a constructor ?

    //A constructor in Java is a special method that is called when an object is created. It is used to initialize the object's state

Can we have multiple constructors in a class?

    //Yes, a class can have multiple constructors as long as the constructors have different parameter lists

If we don't have a constructor declared, what is called during the object creation?

     //If we don't have a constructor declared, the default constructor is called. The default constructor does nothing.

What is "this" keyword in java ?

    //refers to the current object. It can be used to access the object's properties and methods

What is "super" keyword in java? How many possible way can you use?

    //The super keyword in Java is used to refer to the superclass of the current class. It can be used to access the superclass's methods, fields, and constructors. There are two possible ways to use the super keyword:

      To access the superclass's methods, fields, and constructors.
      To call the superclass's constructor.

What is JVM stand for ?

      //JVM stands for Java Virtual Machine. It is essentially a virtual machine or runtime environment that allows Java programs to run and operate on multiple devices and operating systems. Java programs cannot run on machines that don't have JVM support. It is an integral part of the Java Runtime Environment (JRE).

Is JVM platform independent?

     //JVM is undoubtedly platform-independent. Similar to how it varies depending on the surroundings.

What version of java are you using?

      //version 11

What is JAR stand for ?

      //JAR stands for Java ARchive. It's a file format based on the popular ZIP file format and is used for aggregating many files into one

What is the difference between JDK and JVM?

         //JDK is a software development kit to develop applications in Java. It is a software bundle which provides Java class libraries with necessary components to run Java code. JVM executes Java byte code and provides an environment for executing it.

What is the difference between JVM and JRE?

     //JRE identifies all the helpful class libraries needed for execution, while JVM is a subclass of JRE that decodes the bytecode into machine language and other minor tasks. JVM and JRE do not participate in development processes like debugging and compiling; JDK is used for them.

What is compile time and run time?

      //Compile time is the period of time when the Java compiler converts the Java source code into Java bytecode. Run time is the period of time when the Java Virtual Machine (JVM) executes the Java bytecode.

What is heap?

   //The heap is a region of memory in the Java Virtual Machine (JVM) that is used to store objects

How java manage it's memory?

        //Java manages its memory using a garbage collector. The garbage collector is a process that runs in the background and automatically frees up memory that is no longer being used by an application. This allows Java applications to run more efficiently and use less memory.

What is the difference between String, StringBuffer and StringBuilder?

      //String is an immutable class, which means that once a String object is created, its contents cannot be changed.
      //StringBuffer is a mutable class, which means that its contents can be changed after it is created.
      // StringBuilder is a mutable class that is similar to StringBuffer, but it is not synchronized, which means that it is not thread-safe.

What is Singleton class?

    //A singleton class is a class that can only have one instance. This is useful for classes that represent resources that should only be accessed by one object at a time, such as a database connection or a file.

What is Serialization and Deserialization?

     //erialization is the process of converting the state of an object into a byte stream. Deserialization is the reverse process, where the byte stream is used to recreate the original object.

when to use transient variable in java?

     //Transient variables are used to indicate that a variable should not be serialized. This is useful for variables that contain sensitive data, such as passwords or credit card numbers.

Difference between while and do..while loop?

       //A while loop will execute the body of the loop as long as the condition is true. A do while loop will execute the body of the loop once, and then continue to execute the body of the loop as long as the condition is true.

         Here is an example of a while loop:

What is Enum?

            //A Java Enum is a special Java type used to define collections of constants. More precisely, a Java enum type is a special kind of Java class. An enum can contain constants, methods etc. Java enums were added in Java

What is Iterator?

            //An iterator is an object that allows you to traverse the elements of a collection. It is a more efficient way to iterate over a collection than using a for loop, because it does not require creating a new array for each iteration.

Which one will take more memory, an int or Integer?

           //In Java, an int is a primitive data type that takes up 4 bytes of memory. An Integer is a wrapper class for an int that also takes up some memory. The amount of memory that an Integer takes up depends on the size of the int that it wraps. For example, an Integer that wraps a 32-bit int will take up 4 bytes of memory, while an Integer that wraps a 64-bit int will take up 8 bytes of memory.

Why is String Immutable in Java?

           //String is immutable in Java because it is a wrapper class for the primitive char array. If String were mutable, it would be possible to change the contents of a String object, which could lead to unexpected behavior. For example, if you had a String object that contained a reference to another object, and you changed the contents of the String object, the reference would be invalid.

What is constructor chaining in Java?

           // Constructor chaining is a technique in Java that allows you to call one constructor from another constructor in the same class. This can be useful for initializing objects with default values or for passing parameters to constructors

The difference between Serial and Parallel Garbage Collector?

         //The parallel collector is also known as throughput collector, it's a generational collector similar to the serial collector. The primary difference between the serial and parallel collectors is that the parallel collector has multiple threads that are used to speed up garbage collection.

 What is JIT stands for?

      //JIT stands for Just-In-Time compiler. It is a compiler that compiles Java bytecode to native machine code at runtime. This allows Java programs to run faster than if they were compiled to native machine code ahead of time.


Explain Java Heap space and Garbage collection?

      //Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase or decrease in size while the application runs. When the heap becomes full, garbage is collected. During the garbage collection objects that are no longer used are cleared, thus making space for new objects.

Can you guarantee the garbage collection process?

      //No, you cannot guarantee the garbage collection process in Java. Garbage collection is a probabilistic process, and there is no guarantee that all objects will be garbage collected before the program terminates. However, the Java Virtual Machine (JVM) will try its best to collect garbage as soon as possible, and it will do so automatically.

 What is the difference between stack and heap in Java?
     //Stack provides static memory allocation, i.e., it is used to store the temporary variables. Heap provides dynamic memory allocation. By default, all the global variables are stored in the heap. It is a linear data structure means that elements are stored in the linear manner, i.e., one data after another.

What is reflection in java and why is it useful?

        //Reflection is a feature of Java that allows you to inspect and modify the properties and methods of an object at runtime. It is useful for a variety of tasks, such as:

          Debugging: Reflection can be used to inspect the properties and methods of an object at runtime, which can be helpful for debugging problems.
          Introspection: Reflection can be used to introspect an object, which means to learn about its properties and methods without actually using them. This can be useful for things like documentation or code generation.
          Dynamic code generation: Reflection can be used to generate code at runtime, which can be useful for things like creating plugins or extensions.

what is multithreading in java?

         //Multithreading is a feature of Java that allows multiple threads to run concurrently. This can be useful for improving the performance of applications that are CPU-bound.

           To create a multithreaded application, you need to create a class that extends the Thread class. The Thread class provides methods for starting, stopping, and joining threads.

What is the use of synchronization in Java?

     //Synchronization is a mechanism in Java that allows multiple threads to access shared resources safely. It is used to prevent race conditions, which can occur when multiple threads try to access the same resource at the same time.
          There are two main types of synchronization in Java:
          -Locks
          -Condition variable


What is Framework?

    //A framework in Java is a collection of classes and interfaces that provide a foundation for building applications. Frameworks can provide functionality such as database access, user interface components, and networking.

What are the testing Framework available in java?
      //Selenium -
      //Cucumber  JUnit -

Difference between jUnit and testNG?

     //TestNG is a Java-based framework, while JUnit is an open-source Unit Testing Framework for JAVA.

What are the dependencies for this project?

         //In order to identify project dependencies, you must first create a map of project tasks. Next, look for tasks that the team cannot perform until they receive information or deliverables from a previous task. Those tasks are dependent. Think of your whole project as a series of workflows or a flowchart

what is dependency injection in java?

            //Dependency injection is a design pattern that allows you to decouple the consumers of a dependency from the actual implementation of that dependency. This makes it easier to test and maintain your code.

 What is static binding and dynamic binding?

      //Static binding and dynamic binding are two ways to resolve method calls in Java.








